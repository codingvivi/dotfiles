let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/.config/helix
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +1 themes/vivicarbon-translucent.toml
badd +46 themes/vivicarbon.toml
badd +10 config.toml
badd +42 ~/.config/nvim/fnl/config/keymaps.fnl
badd +1 ~/.config/nvim/fnl/plugins/editor/rainbow-delimiters.fnl
badd +2 ~/.config/nvim/fnl/plugins/tools/fzf.fnl
argglobal
%argdel
edit config.toml
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 48 + 50) / 101)
exe 'vert 1resize ' . ((&columns * 123 + 143) / 286)
exe '2resize ' . ((&lines * 49 + 50) / 101)
exe 'vert 2resize ' . ((&columns * 123 + 143) / 286)
exe 'vert 3resize ' . ((&columns * 162 + 143) / 286)
argglobal
balt themes/vivicarbon.toml
setlocal foldmethod=expr
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=20
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
let s:l = 1 - ((0 * winheight(0) + 24) / 48)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 07|
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/fnl/plugins/tools/fzf.fnl", ":p")) | buffer ~/.config/nvim/fnl/plugins/tools/fzf.fnl | else | edit ~/.config/nvim/fnl/plugins/tools/fzf.fnl | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/fnl/plugins/tools/fzf.fnl
endif
balt ~/.config/nvim/fnl/plugins/editor/rainbow-delimiters.fnl
setlocal foldmethod=expr
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=20
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
let s:l = 2 - ((1 * winheight(0) + 24) / 49)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 2
normal! 09|
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/fnl/config/keymaps.fnl", ":p")) | buffer ~/.config/nvim/fnl/config/keymaps.fnl | else | edit ~/.config/nvim/fnl/config/keymaps.fnl | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/fnl/config/keymaps.fnl
endif
balt themes/vivicarbon.toml
setlocal foldmethod=expr
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=20
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
let s:l = 42 - ((41 * winheight(0) + 49) / 98)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 42
normal! 039|
wincmd w
3wincmd w
exe '1resize ' . ((&lines * 48 + 50) / 101)
exe 'vert 1resize ' . ((&columns * 123 + 143) / 286)
exe '2resize ' . ((&lines * 49 + 50) / 101)
exe 'vert 2resize ' . ((&columns * 123 + 143) / 286)
exe 'vert 3resize ' . ((&columns * 162 + 143) / 286)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
